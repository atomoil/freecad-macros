# BSplines - https://wiki.freecadweb.org/Draft_BSpline
#  https://forum.freecadweb.org/viewtopic.php?style=4&t=27342
# help( Part.BezierCurve )
# help( Part.BSplineCurve )
# https://forum.freecadweb.org/viewtopic.php?t=41212

import FreeCAD as App
import Draft
from FreeCAD import Placement, Vector, Rotation

def drawLeaf():
	doc = App.activeDocument()

	points = [ 
		App.Vector(0, 0, 0),
		App.Vector(2, 4, 0),
		App.Vector(4, 5, 0),
		# App.Vector(10, 6, 0),
		# App.Vector(15, 3, 0),
		App.Vector(19, 1, 0),
		App.Vector(20, 0, 0),
	]
	spline = drawLeafOutline(doc, points)
	createHolesOnSpline(doc, spline, 20)


def drawLeafOutline(doc,points):

	rev = points[len(points)-2:0:-1]

	# add the array onto itself without the first and last element
	for pt in rev:
		npt = App.Vector(pt.x,-pt.y,pt.z)
		points.append( npt )

	print(points);

	spline1 = Draft.make_bspline(points, face=False, closed=True, support=None)
	doc.recompute()

	return spline1


def createHolesOnSpline(doc, spline, frequency):
	inc = 1.0/frequency
	for i in range(0,frequency):
		val = i * inc
		# print(spline.Shape.Edges[0])
		loc = spline.Shape.Edges[0].valueAt(val*spline.Shape.Edges[0].Length)
		# print(loc)
		# print("----")

		circle = doc.addObject("Part::Cylinder","circle-{}".format(i))
		circle.Radius = '1 mm'
		circle.Height = '3 mm'
		placement = Placement(loc,Rotation(Vector(0,0,1),1))
		circle.Placement = placement


drawLeaf()
